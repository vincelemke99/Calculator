body {
    background-color: rgb(0, 159, 227); /* Set the background color of the body to a vibrant blue. */
    color: rgb(255, 255, 255); /* Set the text color to white for contrast. */
    font-family: Arial, sans-serif; /* Use Arial or any sans-serif font as the default font family. */
}

/* Style for the heading which may not be defined in your provided HTML. */
#Heading {
    background-color: rgb(255, 255, 255); /* Sets the background color to white for the heading section. */
    color: rgb(0, 0, 0); /* Sets the text color to black to ensure readability on a white background. */
}

/* Style for the description div. */
#Description {
    padding: 20px; /* Adds padding inside the description box for better text spacing. */
    margin-top: 20px; /* Adds top margin to separate the description from elements above it. */
    border-radius: 5px; /* Rounds the corners of the description box. */
}

/* Container for the entire calculator including the display and buttons. */
#calculatorContainer {
    background-color: rgb(255, 255, 255); /* Sets the calculator background to white. */
    padding: 50px; /* Adds padding inside the container for spacing. */
    height: 60vh; /* Sets a relative height based on the viewport height. */
    margin: auto; /* Centers the calculator container horizontally. */
    max-width: 400px; /* Limits the maximum width to maintain a consistent layout. */
    border-radius: 10px; /* Rounds the corners of the calculator container. */
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Adds a subtle shadow for a 3D effect. */
}

/* Container for the calculator buttons. */
#buttonContainer {
    padding: 20px; /* Adds padding around the buttons for spacing. */
    display: grid; /* Uses grid layout to organize buttons into a structured form. */
    grid-template-columns: repeat(4, 1fr); /* Creates four columns of equal width. */
    gap: 5px; /* Adds space between the buttons. */
}

/* Pseudo-element for the calculator display to show a small label. */
.calculator-display::before {
    content: 'Past Calculations >';
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 0.75rem;
    color: rgb(0, 159, 227);
}

/* Styles for individual buttons in the calculator. */
#buttonContainer button {
    padding: 10px; /* Adds padding to make the buttons easier to press. */
    font-size: 16px; /* Sets the font size for clear visibility. */
    border: 1px solid #ddd; /* Outlines the buttons for definition. */
    border-radius: 5px; /* Rounds the corners of the buttons. */
    cursor: pointer; /* Changes the cursor to a pointer to indicate a clickable item. */
    background-color: rgb(255, 255, 255); /* Ensures buttons are white matching the container. */
    margin: 2px; /* Adds margin around buttons to prevent sticking. */
}

/* Styles for the result display area of the calculator. */
#resultArea {
    color: black; /* Sets the text color to black for visibility. */
    font-size: 2em; /* Enlarges the font size for easy reading of results. */
    padding: 20px; /* Adds padding for spacing within the display area. */
    text-align: right; /* Aligns text to the right like traditional calculators. */
    margin-bottom: 20px; /* Adds space below the display area before buttons start. */
    border: 1px solid #ddd; /* Adds a subtle border for visual separation. */
    border-radius: 5px; /* Rounds the corners of the display area. */
    display: flex; /* Uses flexbox layout to align items within the display area. */
    align-items: center; /* Centers items vertically within the display area. */
    justify-content: flex-start; /* Aligns content to the left within the display area. */
}

/* Styles for Material Design icons used in the interface. */
.material-icons {
    margin-right: 10px; /* Adds right margin to icons for spacing from text. */
}

/* Styles for the logo image placement. */
.logo {
    position: absolute;
    top: 10px;
    right: 10px;
    height: 70px; /* Fixed height for the logo. */
    border-radius: 10px; /* Rounds the corners of the logo for aesthetics. */
}

/* General styles for modal components. */
.modal {
    display: none;  /* Hides the modal by default. */
    position: fixed;  /* Positions the modal in relation to the viewport. */
    top: 0;
    left: 0;
    width: 100%; /* Full viewport width. */
    height: 100%; /* Full viewport height. */
    overflow: auto;  /* Allows scrolling within the modal if content overflows. */
    background-color: rgba(0, 0, 0, 0.5);  /* Semi-transparent black background for focus on modal. */
    z-index: 1000;  /* Ensures the modal overlays other content. */
}

.modal-content {
    background-color: white;
    margin: 15% auto;  /* Centers the modal content vertically and horizontally. */
    padding: 20px;
    border: 1px solid #888;
    width: 80%; /* Adjusts the width to fit content. */
}

.close {
    color: #aaa;  /* Light grey color for the close button. */
    float: right;  /* Positions the close button on the right. */
    font-size: 28px; /* Large font size for easy interaction. */
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: black;  /* Changes color to black on hover/focus for visibility. */
    text-decoration: none;  /* Removes underline style. */
    cursor: pointer;  /* Changes cursor to a pointer to indicate it's clickable. */
}

body {
    position: relative; /* Ensures absolute-positioned elements are positioned relative to the body. */
    height: 120vh; /* Sets a specific height relative to the viewport height. */
}

h1 {
    text-align: center; /* Centers the headline horizontally within the element. */
}
